<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springcloud.mapper.UserEnMapper">
  <resultMap id="BaseResultMap" type="com.example.springcloud.entity.UserEn">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password,role,token
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from jwt_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from jwt_user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jwt_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.springcloud.entity.UserEn" useGeneratedKeys="true" keyColumn="id" keyProperty="user.id">
    insert into jwt_user (id, username, password,
      token,role)
    values (#{user.id,jdbcType=INTEGER}, #{user.username,jdbcType=VARCHAR}, #{user.password,jdbcType=VARCHAR},
      #{user.token,jdbcType=VARCHAR},#{user.role,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springcloud.entity.UserEn" useGeneratedKeys="true" keyColumn="id" keyProperty="user.id">
    insert into jwt_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user.id != null">
        id,
      </if>
      <if test="user.username != null">
        userName,
      </if>
      <if test="user.password != null">
        password,
      </if>
      <if test="user.token != null">
        token,
      </if>
      <if test="user.role != null">
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user.id != null">
        #{user.id,jdbcType=INTEGER},
      </if>
      <if test="user.username != null">
        #{user.username,jdbcType=VARCHAR},
      </if>
      <if test="user.password != null">
        #{user.password,jdbcType=VARCHAR},
      </if>
      <if test="user.token != null">
        #{user.token,jdbcType=VARCHAR},
      </if>
      <if test="user.role != null">
        #{user.role,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springcloud.entity.UserEn">
    update jwt_user
    <set>
      <if test="user.username != null">
        username = #{user.username,jdbcType=VARCHAR},
      </if>
      <if test="user.password != null">
        password = #{user.password,jdbcType=VARCHAR},
      </if>
      <if test="user.token != null">
        token = #{user.token,jdbcType=VARCHAR},
      </if>
      <if test="user.role != null">
        role = #{user.role,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{user.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springcloud.entity.UserEn">
    update jwt_user
    set username = #{user.username,jdbcType=VARCHAR},
      password = #{user.password,jdbcType=VARCHAR},
      token = #{user.token,jdbcType=VARCHAR},
      role = #{user.role,jdbcType=VARCHAR}
    where id = #{user.id,jdbcType=INTEGER}
  </update>
</mapper>
